name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{ steps.set-vars.outputs.artifact-name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16.x

      - name: Build project
        run: |
          npm install
          npm run build

      - name: Generate unique artifact name
        id: set-vars
        run: |
          ARTIFACT_NAME="年会抽奖程序-Setup-$(date +%Y%m%d%H%M%S).exe"
          echo "artifact-name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

      - name: Build EXE
        run: npx electron-builder --win --publish never
        env:
          NODE_ENV: production

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./electron-dist/*.exe
          asset_name: ${{ needs.build.outputs.artifact-name }}
          asset_content_type: application/octet-stream
